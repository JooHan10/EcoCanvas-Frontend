name: FE React Deploy
on:
  push:
    branches:
      - main
jobs:
  react:
    name: react build & deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      
      # npm 패키지 설치
      - name: install npm dependencies
        run: yarn install
      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL" >> .env.production
          echo "REACT_APP_FRONTEND_URL=$REACT_APP_FRONTEND_URL" >> .env.production
          echo "REACT_APP_WEBSOCK_URL=$REACT_APP_WEBSOCK_URL" >> .env.production
          echo "REACT_APP_KAKAO_REST_API_KEY=$REACT_APP_KAKAO_REST_API_KEY" >> .env.production
          echo "REACT_APP_KAKAOSHARE_KEY=$REACT_APP_KAKAOSHARE_KEY" >> .env.production
          echo "REACT_APP_S3_URL=$REACT_APP_S3_URL" >> .env.production
          echo "REACT_APP_ACCESS_KEY=$REACT_APP_ACCESS_KEY" >> .env.production
          echo "REACT_APP_SECRET_ACCESS_KEY=$REACT_APP_SECRET_ACCESS_KEY" >> .env.production
          echo "REACT_APP_REGION=$REACT_APP_REGION" >> .env.production
          echo "REACT_APP_BUCKET_NAME=$REACT_APP_BUCKET_NAME" >> .env.production
          echo "NODE_ENV=$NODE_ENV" >> .env.production
        env:
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
          REACT_APP_FRONTEND_URL: ${{ secrets.REACT_APP_FRONTEND_URL }}
          REACT_APP_WEBSOCK_URL: ${{ secrets.REACT_APP_WEBSOCK_URL }}
          REACT_APP_KAKAO_REST_API_KEY: ${{ secrets.REACT_APP_KAKAO_REST_API_KEY }}
          REACT_APP_KAKAOSHARE_KEY: ${{ secrets.REACT_APP_KAKAOSHARE_KEY }}
          REACT_APP_S3_URL: ${{ secrets.REACT_APP_S3_URL }}
          REACT_APP_ACCESS_KEY: ${{ secrets.REACT_APP_ACCESS_KEY }}
          REACT_APP_SECRET_ACCESS_KEY: ${{ secrets.REACT_APP_SECRET_ACCESS_KEY }}
          REACT_APP_REGION: ${{ secrets.REACT_APP_REGION }}
          REACT_APP_BUCKET_NAME: ${{ secrets.REACT_APP_BUCKET_NAME }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          
      # 리액트 빌드
      - name: build react
        run: npm run build
        
      # aws user 연결
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2
      # react 빌드한 /build를 s3로 업로드
      - name: Upload /build to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME}}
        run: |
          aws s3 sync \
            ./build s3://$BUCKET_NAME
      # 업로드한 s3 파일을 각 CDN 캐시 무효화하여 리프레시 하기
      - name: CloudFront Invalidation
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID}}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUD_FRONT_ID --paths "/*"
